#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KasynoT")]
	public partial class AdventureWorksDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGry(Gry instance);
    partial void UpdateGry(Gry instance);
    partial void DeleteGry(Gry instance);
    partial void InsertKlienci(Klienci instance);
    partial void UpdateKlienci(Klienci instance);
    partial void DeleteKlienci(Klienci instance);
    partial void InsertOpisyStanu(OpisyStanu instance);
    partial void UpdateOpisyStanu(OpisyStanu instance);
    partial void DeleteOpisyStanu(OpisyStanu instance);
    partial void InsertPartie(Partie instance);
    partial void UpdatePartie(Partie instance);
    partial void DeletePartie(Partie instance);
    #endregion
		
		public AdventureWorksDataContext() : 
				base(global::Data.Properties.Settings.Default.KasynoTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AdventureWorksDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdventureWorksDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdventureWorksDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdventureWorksDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Gry> Gry
		{
			get
			{
				return this.GetTable<Gry>();
			}
		}
		
		public System.Data.Linq.Table<Klienci> Klienci
		{
			get
			{
				return this.GetTable<Klienci>();
			}
		}
		
		public System.Data.Linq.Table<OpisyStanu> OpisyStanu
		{
			get
			{
				return this.GetTable<OpisyStanu>();
			}
		}
		
		public System.Data.Linq.Table<Partie> Partie
		{
			get
			{
				return this.GetTable<Partie>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gry")]
	public partial class Gry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idG;
		
		private string _nazwa;
		
		private int _wygrana;
		
		private float _cenaWejsciowa;
		
		private EntitySet<OpisyStanu> _OpisyStanu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGChanging(int value);
    partial void OnidGChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    partial void OnwygranaChanging(int value);
    partial void OnwygranaChanged();
    partial void OncenaWejsciowaChanging(float value);
    partial void OncenaWejsciowaChanged();
    #endregion
		
		public Gry()
		{
			this._OpisyStanu = new EntitySet<OpisyStanu>(new Action<OpisyStanu>(this.attach_OpisyStanu), new Action<OpisyStanu>(this.detach_OpisyStanu));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idG
		{
			get
			{
				return this._idG;
			}
			set
			{
				if ((this._idG != value))
				{
					this.OnidGChanging(value);
					this.SendPropertyChanging();
					this._idG = value;
					this.SendPropertyChanged("idG");
					this.OnidGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wygrana", DbType="Int NOT NULL")]
		public int wygrana
		{
			get
			{
				return this._wygrana;
			}
			set
			{
				if ((this._wygrana != value))
				{
					this.OnwygranaChanging(value);
					this.SendPropertyChanging();
					this._wygrana = value;
					this.SendPropertyChanged("wygrana");
					this.OnwygranaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cenaWejsciowa", DbType="float NOT NULL")]
		public float cenaWejsciowa
		{
			get
			{
				return this._cenaWejsciowa;
			}
			set
			{
				if ((this._cenaWejsciowa != value))
				{
					this.OncenaWejsciowaChanging(value);
					this.SendPropertyChanging();
					this._cenaWejsciowa = value;
					this.SendPropertyChanged("cenaWejsciowa");
					this.OncenaWejsciowaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gry_OpisyStanu", Storage="_OpisyStanu", ThisKey="idG", OtherKey="idG")]
		public EntitySet<OpisyStanu> OpisyStanu
		{
			get
			{
				return this._OpisyStanu;
			}
			set
			{
				this._OpisyStanu.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OpisyStanu(OpisyStanu entity)
		{
			this.SendPropertyChanging();
			entity.Gry = this;
		}
		
		private void detach_OpisyStanu(OpisyStanu entity)
		{
			this.SendPropertyChanging();
			entity.Gry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Klienci")]
	public partial class Klienci : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idK;
		
		private string _imieK;
		
		private string _nazwiskoK;
		
		private string _telefon;
		
		private string _adres;
		
		private float _portfel;
		
		private EntitySet<Partie> _Partie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidKChanging(int value);
    partial void OnidKChanged();
    partial void OnimieKChanging(string value);
    partial void OnimieKChanged();
    partial void OnnazwiskoKChanging(string value);
    partial void OnnazwiskoKChanged();
    partial void OntelefonChanging(string value);
    partial void OntelefonChanged();
    partial void OnadresChanging(string value);
    partial void OnadresChanged();
    partial void OnportfelChanging(float value);
    partial void OnportfelChanged();
    #endregion
		
		public Klienci()
		{
			this._Partie = new EntitySet<Partie>(new Action<Partie>(this.attach_Partie), new Action<Partie>(this.detach_Partie));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idK
		{
			get
			{
				return this._idK;
			}
			set
			{
				if ((this._idK != value))
				{
					this.OnidKChanging(value);
					this.SendPropertyChanging();
					this._idK = value;
					this.SendPropertyChanged("idK");
					this.OnidKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imieK", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string imieK
		{
			get
			{
				return this._imieK;
			}
			set
			{
				if ((this._imieK != value))
				{
					this.OnimieKChanging(value);
					this.SendPropertyChanging();
					this._imieK = value;
					this.SendPropertyChanged("imieK");
					this.OnimieKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwiskoK", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string nazwiskoK
		{
			get
			{
				return this._nazwiskoK;
			}
			set
			{
				if ((this._nazwiskoK != value))
				{
					this.OnnazwiskoKChanging(value);
					this.SendPropertyChanging();
					this._nazwiskoK = value;
					this.SendPropertyChanged("nazwiskoK");
					this.OnnazwiskoKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefon", DbType="Char(9) NOT NULL", CanBeNull=false)]
		public string telefon
		{
			get
			{
				return this._telefon;
			}
			set
			{
				if ((this._telefon != value))
				{
					this.OntelefonChanging(value);
					this.SendPropertyChanging();
					this._telefon = value;
					this.SendPropertyChanged("telefon");
					this.OntelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adres", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string adres
		{
			get
			{
				return this._adres;
			}
			set
			{
				if ((this._adres != value))
				{
					this.OnadresChanging(value);
					this.SendPropertyChanging();
					this._adres = value;
					this.SendPropertyChanged("adres");
					this.OnadresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_portfel", DbType="float NOT NULL")]
		public float portfel
		{
			get
			{
				return this._portfel;
			}
			set
			{
				if ((this._portfel != value))
				{
					this.OnportfelChanging(value);
					this.SendPropertyChanging();
					this._portfel = value;
					this.SendPropertyChanged("portfel");
					this.OnportfelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klienci_Partie", Storage="_Partie", ThisKey="idK", OtherKey="idK")]
		public EntitySet<Partie> Partie
		{
			get
			{
				return this._Partie;
			}
			set
			{
				this._Partie.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Partie(Partie entity)
		{
			this.SendPropertyChanging();
			entity.Klienci = this;
		}
		
		private void detach_Partie(Partie entity)
		{
			this.SendPropertyChanging();
			entity.Klienci = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OpisyStanu")]
	public partial class OpisyStanu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idOS;
		
		private System.Nullable<int> _idG;
		
		private int _iloscGraczy;
		
		private bool _czySkonczona;
		
		private decimal _mnoznikWygranej;
		
		private EntitySet<Partie> _Partie;
		
		private EntityRef<Gry> _Gry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidOSChanging(int value);
    partial void OnidOSChanged();
    partial void OnidGChanging(System.Nullable<int> value);
    partial void OnidGChanged();
    partial void OniloscGraczyChanging(int value);
    partial void OniloscGraczyChanged();
    partial void OnczySkonczonaChanging(bool value);
    partial void OnczySkonczonaChanged();
    partial void OnmnoznikWygranejChanging(decimal value);
    partial void OnmnoznikWygranejChanged();
    #endregion
		
		public OpisyStanu()
		{
			this._Partie = new EntitySet<Partie>(new Action<Partie>(this.attach_Partie), new Action<Partie>(this.detach_Partie));
			this._Gry = default(EntityRef<Gry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOS", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idOS
		{
			get
			{
				return this._idOS;
			}
			set
			{
				if ((this._idOS != value))
				{
					this.OnidOSChanging(value);
					this.SendPropertyChanging();
					this._idOS = value;
					this.SendPropertyChanged("idOS");
					this.OnidOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idG", DbType="Int")]
		public System.Nullable<int> idG
		{
			get
			{
				return this._idG;
			}
			set
			{
				if ((this._idG != value))
				{
					if (this._Gry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGChanging(value);
					this.SendPropertyChanging();
					this._idG = value;
					this.SendPropertyChanged("idG");
					this.OnidGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iloscGraczy", DbType="Int NOT NULL")]
		public int iloscGraczy
		{
			get
			{
				return this._iloscGraczy;
			}
			set
			{
				if ((this._iloscGraczy != value))
				{
					this.OniloscGraczyChanging(value);
					this.SendPropertyChanging();
					this._iloscGraczy = value;
					this.SendPropertyChanged("iloscGraczy");
					this.OniloscGraczyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_czySkonczona", DbType="Bit NOT NULL")]
		public bool czySkonczona
		{
			get
			{
				return this._czySkonczona;
			}
			set
			{
				if ((this._czySkonczona != value))
				{
					this.OnczySkonczonaChanging(value);
					this.SendPropertyChanging();
					this._czySkonczona = value;
					this.SendPropertyChanged("czySkonczona");
					this.OnczySkonczonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mnoznikWygranej", DbType="Money NOT NULL")]
		public decimal mnoznikWygranej
		{
			get
			{
				return this._mnoznikWygranej;
			}
			set
			{
				if ((this._mnoznikWygranej != value))
				{
					this.OnmnoznikWygranejChanging(value);
					this.SendPropertyChanging();
					this._mnoznikWygranej = value;
					this.SendPropertyChanged("mnoznikWygranej");
					this.OnmnoznikWygranejChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OpisyStanu_Partie", Storage="_Partie", ThisKey="idOS", OtherKey="idOS")]
		public EntitySet<Partie> Partie
		{
			get
			{
				return this._Partie;
			}
			set
			{
				this._Partie.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gry_OpisyStanu", Storage="_Gry", ThisKey="idG", OtherKey="idG", IsForeignKey=true)]
		public Gry Gry
		{
			get
			{
				return this._Gry.Entity;
			}
			set
			{
				Gry previousValue = this._Gry.Entity;
				if (((previousValue != value) 
							|| (this._Gry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gry.Entity = null;
						previousValue.OpisyStanu.Remove(this);
					}
					this._Gry.Entity = value;
					if ((value != null))
					{
						value.OpisyStanu.Add(this);
						this._idG = value.idG;
					}
					else
					{
						this._idG = default(Nullable<int>);
					}
					this.SendPropertyChanged("Gry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Partie(Partie entity)
		{
			this.SendPropertyChanging();
			entity.OpisyStanu = this;
		}
		
		private void detach_Partie(Partie entity)
		{
			this.SendPropertyChanging();
			entity.OpisyStanu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Partie")]
	public partial class Partie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idP;
		
		private System.Nullable<int> _idOS;
		
		private System.Nullable<int> _idK;
		
		private System.DateTime _dataGry;
		
		private EntityRef<Klienci> _Klienci;
		
		private EntityRef<OpisyStanu> _OpisyStanu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPChanging(int value);
    partial void OnidPChanged();
    partial void OnidOSChanging(System.Nullable<int> value);
    partial void OnidOSChanged();
    partial void OnidKChanging(System.Nullable<int> value);
    partial void OnidKChanged();
    partial void OndataGryChanging(System.DateTime value);
    partial void OndataGryChanged();
    #endregion
		
		public Partie()
		{
			this._Klienci = default(EntityRef<Klienci>);
			this._OpisyStanu = default(EntityRef<OpisyStanu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idP
		{
			get
			{
				return this._idP;
			}
			set
			{
				if ((this._idP != value))
				{
					this.OnidPChanging(value);
					this.SendPropertyChanging();
					this._idP = value;
					this.SendPropertyChanged("idP");
					this.OnidPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOS", DbType="Int")]
		public System.Nullable<int> idOS
		{
			get
			{
				return this._idOS;
			}
			set
			{
				if ((this._idOS != value))
				{
					if (this._OpisyStanu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidOSChanging(value);
					this.SendPropertyChanging();
					this._idOS = value;
					this.SendPropertyChanged("idOS");
					this.OnidOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idK", DbType="Int")]
		public System.Nullable<int> idK
		{
			get
			{
				return this._idK;
			}
			set
			{
				if ((this._idK != value))
				{
					if (this._Klienci.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidKChanging(value);
					this.SendPropertyChanging();
					this._idK = value;
					this.SendPropertyChanged("idK");
					this.OnidKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataGry", DbType="SmallDateTime NOT NULL")]
		public System.DateTime dataGry
		{
			get
			{
				return this._dataGry;
			}
			set
			{
				if ((this._dataGry != value))
				{
					this.OndataGryChanging(value);
					this.SendPropertyChanging();
					this._dataGry = value;
					this.SendPropertyChanged("dataGry");
					this.OndataGryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klienci_Partie", Storage="_Klienci", ThisKey="idK", OtherKey="idK", IsForeignKey=true)]
		public Klienci Klienci
		{
			get
			{
				return this._Klienci.Entity;
			}
			set
			{
				Klienci previousValue = this._Klienci.Entity;
				if (((previousValue != value) 
							|| (this._Klienci.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klienci.Entity = null;
						previousValue.Partie.Remove(this);
					}
					this._Klienci.Entity = value;
					if ((value != null))
					{
						value.Partie.Add(this);
						this._idK = value.idK;
					}
					else
					{
						this._idK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Klienci");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OpisyStanu_Partie", Storage="_OpisyStanu", ThisKey="idOS", OtherKey="idOS", IsForeignKey=true)]
		public OpisyStanu OpisyStanu
		{
			get
			{
				return this._OpisyStanu.Entity;
			}
			set
			{
				OpisyStanu previousValue = this._OpisyStanu.Entity;
				if (((previousValue != value) 
							|| (this._OpisyStanu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisyStanu.Entity = null;
						previousValue.Partie.Remove(this);
					}
					this._OpisyStanu.Entity = value;
					if ((value != null))
					{
						value.Partie.Add(this);
						this._idOS = value.idOS;
					}
					else
					{
						this._idOS = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisyStanu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
